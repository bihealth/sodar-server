# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-01-26 15:56
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projectroles', '0004_projectusertag'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('omics_uuid', models.UUIDField(default=uuid.uuid4, help_text='Internal UUID for the object', unique=True)),
                ('sharing_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Data sharing rules')),
                ('retraction_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Consent retraction data')),
                ('file_name', models.CharField(help_text='File name for exporting', max_length=255, unique=True)),
                ('technology_platform', models.CharField(blank=True, help_text='Technology platform (optional)', max_length=255, null=True)),
                ('technology_type', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Technology type')),
                ('measurement_type', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Measurement type')),
                ('comments', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Comments')),
            ],
        ),
        migrations.CreateModel(
            name='GenericMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('omics_uuid', models.UUIDField(default=uuid.uuid4, help_text='Internal UUID for the object', unique=True)),
                ('sharing_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Data sharing rules')),
                ('retraction_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Consent retraction data')),
                ('item_type', models.CharField(choices=[('SOURCE', 'Source'), ('MATERIAL', 'Material'), ('SAMPLE', 'Sample'), ('DATA', 'Data')], default='MATERIAL', max_length=255)),
                ('name', models.CharField(help_text='Material name', max_length=255)),
                ('characteristics', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Material characteristics')),
                ('material_type', models.CharField(blank=True, help_text='Material or data file type', max_length=255, null=True)),
                ('factor_values', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Factor values for a sample')),
                ('assay', models.ForeignKey(help_text='Assay to which the material belongs (optional)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='samplesheets.Assay')),
            ],
        ),
        migrations.CreateModel(
            name='Investigation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('omics_uuid', models.UUIDField(default=uuid.uuid4, help_text='Internal UUID for the object', unique=True)),
                ('sharing_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Data sharing rules')),
                ('retraction_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Consent retraction data')),
                ('identifier', models.CharField(help_text='Locally unique identifier', max_length=255, unique=True)),
                ('file_name', models.CharField(help_text='File name for exporting', max_length=255, unique=True)),
                ('ontology_source_refs', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Ontology source references')),
                ('comments', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Comments')),
                ('project', models.ForeignKey(help_text='Project to which the investigation belongs', on_delete=django.db.models.deletion.CASCADE, related_name='investigations', to='projectroles.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('omics_uuid', models.UUIDField(default=uuid.uuid4, help_text='Internal UUID for the object', unique=True)),
                ('sharing_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Data sharing rules')),
                ('retraction_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Consent retraction data')),
                ('name', models.CharField(help_text='Process name', max_length=255)),
                ('parameter_values', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Process parameter values')),
                ('performer', models.CharField(blank=True, help_text='Process performer (optional)', max_length=255, null=True)),
                ('comments', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Comments')),
                ('inputs', models.ManyToManyField(help_text='Material and data file inputs', related_name='material_targets', to='samplesheets.GenericMaterial')),
                ('outputs', models.ManyToManyField(help_text='Material and data file outputs', related_name='material_sources', to='samplesheets.GenericMaterial')),
                ('previous_process', models.ForeignKey(help_text='Previous process (can be None for first process in sequence)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_process', to='samplesheets.Process')),
            ],
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('omics_uuid', models.UUIDField(default=uuid.uuid4, help_text='Internal UUID for the object', unique=True)),
                ('sharing_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Data sharing rules')),
                ('retraction_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Consent retraction data')),
                ('name', models.CharField(help_text='Protocol name', max_length=255)),
                ('protocol_type', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Protocol type')),
                ('description', models.TextField(blank=True, help_text='Protocol description')),
                ('uri', models.URLField(help_text='Protocol URI')),
                ('version', models.CharField(help_text='Protocol version', max_length=255)),
                ('parameters', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Protocol parameters')),
                ('components', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Protocol components')),
            ],
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('omics_uuid', models.UUIDField(default=uuid.uuid4, help_text='Internal UUID for the object', unique=True)),
                ('sharing_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Data sharing rules')),
                ('retraction_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Consent retraction data')),
                ('identifier', models.CharField(help_text='Locally unique identifier', max_length=255, unique=True)),
                ('file_name', models.CharField(help_text='File name for exporting', max_length=255, unique=True)),
                ('title', models.CharField(help_text='Title of the study', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Study description')),
                ('study_design', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Study design descriptors')),
                ('factors', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Study factors')),
                ('first_process', models.ForeignKey(help_text='First process in the process sequence', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='study', to='samplesheets.Process')),
                ('investigation', models.ForeignKey(help_text='Investigation to which the study belongs', on_delete=django.db.models.deletion.CASCADE, related_name='studies', to='samplesheets.Investigation')),
            ],
        ),
        migrations.AddField(
            model_name='protocol',
            name='study',
            field=models.ForeignKey(help_text='Study to which the protocol belongs', on_delete=django.db.models.deletion.CASCADE, related_name='protocols', to='samplesheets.Study'),
        ),
        migrations.AddField(
            model_name='process',
            name='protocol',
            field=models.ForeignKey(blank=True, help_text='Protocol which the process executes', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='processes', to='samplesheets.Protocol'),
        ),
        migrations.AddField(
            model_name='genericmaterial',
            name='study',
            field=models.ForeignKey(help_text='Study to which the material belongs (optional)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='samplesheets.Study'),
        ),
        migrations.AddField(
            model_name='assay',
            name='first_process',
            field=models.ForeignKey(help_text='First process in the process sequence', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assay', to='samplesheets.Process'),
        ),
        migrations.AddField(
            model_name='assay',
            name='study',
            field=models.ForeignKey(help_text='Study to which the assay belongs', on_delete=django.db.models.deletion.CASCADE, related_name='assays', to='samplesheets.Study'),
        ),
        migrations.AlterUniqueTogether(
            name='study',
            unique_together=set([('investigation', 'identifier', 'title')]),
        ),
        migrations.AlterUniqueTogether(
            name='protocol',
            unique_together=set([('study', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='process',
            unique_together=set([('protocol', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='assay',
            unique_together=set([('study', 'file_name')]),
        ),
    ]
