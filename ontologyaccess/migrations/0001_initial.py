# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-09-24 11:53
from __future__ import unicode_literals

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OBOFormatOntology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ontology_id', models.CharField(help_text='Ontology ID', max_length=255, unique=True)),
                ('title', models.CharField(blank=True, help_text='Ontology title (optional)', max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='Ontology description (optional)', null=True)),
                ('format_version', models.CharField(help_text='Format version', max_length=255)),
                ('data_version', models.CharField(blank=True, help_text='Data version', max_length=255, null=True)),
                ('default_namespace', models.CharField(blank=True, help_text='Default namespace', max_length=255, null=True)),
                ('term_url', models.CharField(default='http://purl.obolibrary.org/obo/{id_space}_{local_id}', help_text='Format string for term accession URL. Supports {id_space} and {local_id}.', max_length=2000)),
                ('sodar_version', models.CharField(help_text='SODAR version during ontology parsing', max_length=255)),
                ('date_created', models.DateTimeField(auto_now=True, help_text='DateTime of ontology creation in SODAR')),
                ('sodar_uuid', models.UUIDField(default=uuid.uuid4, help_text='SODAR UUID for the object', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='OBOFormatOntologyTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term_id', models.CharField(help_text='Term ID', max_length=255, unique=True)),
                ('alt_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), default=list, help_text='Alternative Term IDs', size=None)),
                ('name', models.CharField(help_text='Term name', max_length=255)),
                ('definition', models.TextField(blank=True, help_text='Term definition', null=True)),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), default=list, help_text='Term synonyms', size=None)),
                ('namespace', models.CharField(blank=True, help_text='Namespace', max_length=255, null=True)),
                ('comment', models.TextField(blank=True, help_text='Term comment', null=True)),
                ('is_obsolete', models.BooleanField(default=False, help_text='Obsolete or deprecated term')),
                ('replaced_by', models.CharField(blank=True, help_text='Replaced by ID in case of an obsolete term', max_length=255, null=True)),
                ('sodar_uuid', models.UUIDField(default=uuid.uuid4, help_text='SODAR UUID for the object', unique=True)),
                ('ontology', models.ForeignKey(help_text='Ontology to which the term belongs', on_delete=django.db.models.deletion.CASCADE, related_name='terms', to='ontologyaccess.OBOFormatOntology')),
            ],
        ),
    ]
